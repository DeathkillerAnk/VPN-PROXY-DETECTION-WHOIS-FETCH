import React, { Component } from 'react';
import { Container, TextField, IconButton, InputAdornment, Grid, Paper } from '@material-ui/core';
import Card from '@material-ui/core/Card';
import CardContent from '@material-ui/core/CardContent';
import Typography from '@material-ui/core/Typography';
import { makeStyles } from '@material-ui/core/styles';
import { CloudUploadRounded as UploadIcon, PrintRounded as PrintIcon } from "@material-ui/icons";
import { Button } from "@material-ui/core";
import axios from 'axios';
import { LoadingContext } from '../../Context/LoadingContext';

export default class Analytics extends Component {
    static contextType = LoadingContext;
    constructor(props) {
        super(props);
        this.state = {
            analyticsData: {
                totalData: "14893",
                trainData: "6483",
                testData: "1621",
                generateDataLogs: "4 total no of IPs processed\n\n        =============== END ====================\n        nProcessed: 4\n        nNotProcessed: 0\n        nFetched: 4\n        nFailed: 0\n        ========================================\n        ",
                mlLogs: "[ 2020-08-02 17:19:03.346727 ] Started Training Model\n[ 2020-08-02 17:19:03.346769 ] Loading CSV Files\n[ 2020-08-02 17:19:04.104739 ] Dataset created\n[ 2020-08-02 17:19:04.126548 ] Training Model\n[ 2020-08-02 17:19:35.920131 ] Model trained\n[ 2020-08-02 17:19:35.920180 ] Saving Model\n"
            }
        }
    }
    printDiv = function (divName) {
        let currentTime = new Date();
        let timeStamp = Date.now()
        window.$('#' + divName).printThis({
            importCSS: true,
            importStyle: true,
            header: `<b>Report</b>- Generated by Code on Steroid IP Forensic app`,
            footer: `<span>Date: ${currentTime.toDateString()} ${currentTime.toTimeString()} </span>&nbsp;&nbsp;<span class="ml-auto">Timestamp:${timeStamp}</span>`,
        });
    }
    async componentDidMount() {
        try {
            this.context.showSpinner();
            const { data, status } = await axios.get('/api/analytics/getallanalytics');
            this.setState({ analyticsData: data });
            this.context.hideSpinner();

        } catch (error) {
            this.context.hideSpinner();
            this.context.showSnackBar("Some error occured. Try again later")
        }
    }
    render() {

        return (
            <Container >
                <Grid container spacing={3}>

                    <Grid item xs={12} md={4} sm={6}>
                        <Card >
                            <CardContent>
                                <Typography variant="h6" color="textSecondary" gutterBottom>
                                    Total Dataset
                                </Typography>
                                <Typography variant="h3">
                                780018
                                </Typography>
                            </CardContent>
                        </Card>
                    </Grid>

                    <Grid item xs={12} md={4} sm={6}>
                        <Card >
                            <CardContent>
                                <Typography variant="h6" color="textSecondary" gutterBottom>
                                    Processed IP
                                </Typography>
                                <Typography variant="h3" >
                                    {this.state.analyticsData.totalData}
                                </Typography>
                            </CardContent>
                        </Card>
                    </Grid>

                    <Grid item xs={12} md={4} sm={6}>
                        <Card >
                            <CardContent>
                                <Typography variant="h6" color="textSecondary" gutterBottom>
                                    Training Dataset
                                </Typography>
                                <Typography variant="h3" >
                                    {this.state.analyticsData.trainData}
                                </Typography>
                            </CardContent>
                        </Card>
                    </Grid>

                    <Grid item xs={12} md={4} sm={6}>
                        <Card >
                            <CardContent>
                                <Typography variant="h6" color="textSecondary" gutterBottom>
                                    Test Dataset
                                </Typography>
                                <Typography variant="h3">
                                    {this.state.analyticsData.testData}
                                </Typography>
                            </CardContent>
                        </Card>
                    </Grid>

                    <Grid item xs={12} md={4} sm={6}>
                        <Card >
                            <CardContent>
                                <Typography variant="h6" color="textSecondary" gutterBottom>
                                    Model Accuracy
                                </Typography>
                                <Typography variant="h3">
                                    80% - 95%
                                </Typography>
                            </CardContent>
                        </Card>
                    </Grid>

                </Grid>

                <Grid container spacing={3} >
                    <Grid className="text-center" item xs={12} md={6} >
                        <Paper variant="outlined" className="p-2">
                            <div id="printarea">
                                <Typography variant="h5">Data Generator Log</Typography>
                                <pre className="text-left mt-2" style={{ fontSize: "1rem" }}>
                                    {this.state.analyticsData.generateDataLogs}
                                </pre>

                            </div>
                            <Button size="large" className="mt-3" variant="contained" startIcon={<PrintIcon />} onClick={this.printDiv.bind(this, 'printarea')}>Print Logs</Button>
                        </Paper>

                    </Grid>

                    <Grid item xs={12} md={6} className="text-center">
                        <Paper variant="outlined" className="p-2">
                            <div id="printarea2">
                                <Typography variant="h5">ML Model Log</Typography>
                                <pre className="text-left mt-2" style={{ fontSize: "1rem" }}>
                                    {this.state.analyticsData.mlLogs}
                                </pre>

                            </div>
                            <Button size="large" className="mt-3" variant="contained" startIcon={<PrintIcon />} onClick={this.printDiv.bind(this, 'printarea2')}>Print Logs</Button>
                        </Paper>

                    </Grid>
                </Grid>

            </Container>
        );
    }


}